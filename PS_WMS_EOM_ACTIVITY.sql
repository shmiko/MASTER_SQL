DECLARE @FromShipDate as date
DECLARE @ToShipDate as date

SELECT @FromShipDate = '09/01/2016'   
SELECT @ToShipDate = '12/02/2016'  --Note:  Make this +1 days from your last ship date

(SELECT SALES_ORDER.BILL_TO_ID as CustomerId, SALES_ORDER.CUST_ID as ParentId, DEBTOR.NAMES as Parent, SO_LINE_ITEM.COST_CENTER as CostCentre,
SALES_ORDER.SO_ID as OrderNum, SALES_ORDER.CUST_SO_ID as OrderWareNum, SO_LINE_ITEM.PO_NO as CustRef, SO_LINE_ITEM.PICK_ID as PickSlip,
OrderShipTo.ShippingComment as DespNote,
(SELECT TOP (1) SHIP_DATE FROM PACKAGE WHERE PICK_ID=SO_LINE_ITEM.PICK_ID) as DespDate, 'Item' as FeeType, 
SO_LINE_ITEM.ITEM_NO as Item, SO_LINE_ITEM.ITEM_DESCRIPTION as Description, SO_LINE_ITEM.PACK_QTY as Qty,
PAPSIZE.[UNIT OF ISSUE] as UOI, PAPSIZE.[UNIT ISSUE DESC] as UnitOfIssDesc, SO_LINE_ITEM_PRICE.UNIT_PRICE as UnitPrice, 
((SO_LINE_ITEM_PRICE.UNIT_PRICE * SO_LINE_ITEM.PACK_QTY) + SO_LINE_ITEM_PRICE.SHIPPING_HANDLING) as SellExcl, 
((SO_LINE_ITEM_PRICE.UNIT_PRICE * SO_LINE_ITEM.PACK_QTY) + SO_LINE_ITEM_PRICE.SHIPPING_HANDLING + ISNULL(SO_LINE_ITEM_PRICE.SALES_TAX,0)) as SellIncl, 
RECIPIENT.COMPANY_NAME as DeliverTo, (RECIPIENT.FIRST_NAME + ' ' + RECIPIENT.LAST_NAME) as AttentionTo, 
(SELECT SUM(ACTUAL_WEIGHT) FROM PACKAGE WHERE PICK_ID = SO_LINE_ITEM.PICK_ID) as Weight, 
(SELECT COUNT(1) FROM PACKAGE WHERE PACKAGE.PICK_ID=SO_LINE_ITEM.PICK_ID) as Packages
FROM SO_LINE_ITEM
	INNER JOIN SALES_ORDER ON SALES_ORDER.SO_ID = SO_LINE_ITEM.SO_ID
	INNER JOIN CUSTOMER ON CUSTOMER.CUST_ID = SO_LINE_ITEM.CUST_ID
	INNER JOIN DEBTOR ON DEBTOR.[DATAFLEX RECNUM ONE] = CUSTOMER.DEBTOR_RECNUM
	INNER JOIN PAPSIZE ON PAPSIZE.[CODE] = cast(SO_LINE_ITEM.ITEM_NO as char) 
	INNER JOIN RECIPIENT ON RECIPIENT.RECIP_ID = SO_LINE_ITEM.SHIP_TO_ID
	LEFT JOIN OrderShipTo ON OrderShipTo.OrderId = SALES_ORDER.SO_ID
	LEFT JOIN PACKAGE ON PACKAGE.SO_ID = SALES_ORDER.SO_ID
	INNER JOIN SO_LINE_ITEM_PRICE ON (SO_LINE_ITEM_PRICE.SO_ID = SO_LINE_ITEM.SO_ID) AND (SO_LINE_ITEM_PRICE.LINE_ITEM_NO = SO_LINE_ITEM.LINE_ITEM_NO)
WHERE ISNULL(SO_LINE_ITEM.PICK_ID, '0') > 0 AND ISNULL(SO_LINE_ITEM.ITEM_NO,0) <> 0 AND (SO_LINE_ITEM.CREATED_DATE >= @FromShipDate AND SO_LINE_ITEM.CREATED_DATE <= @ToShipDate))

UNION 

(SELECT SALES_ORDER.BILL_TO_ID as CustomerId, SALES_ORDER.CUST_ID as ParentId, DEBTOR.NAMES as Parent, '' as CostCentre,
SALES_ORDER.SO_ID as OrderNum, SALES_ORDER.CUST_SO_ID as OrderWareNum, '' as CustRef, '' as PickSlip,
'' as DespNote, FF_TRANS.TIME_START as DespDate, 'PriceList' as FeeType, 
FF_TRANS.TIMELINE_ID as Item, FF_TIMELINE.TIMELINE as Description, FF_TRANS.ACT_QTY as Qty,
'' as UOI, 'Each' as UnitOfIssDesc, FF_TRANS.ACT_PPU as UnitPrice, 
(FF_TRANS.ACT_PPU * FF_TRANS.ACT_QTY) as SellExcl, 
((FF_TRANS.ACT_PPU * FF_TRANS.ACT_QTY) + ISNULL(FF_TRANS.SalesTax,0)) as SellIncl, 
'' as DeliverTo, '' as AttentionTo, '0' as Weight, '0' as Packages
FROM FF_TRANS
	INNER JOIN SALES_ORDER ON SALES_ORDER.SO_ID = FF_TRANS.SO_ID
	INNER JOIN FF_TIMELINE ON FF_TIMELINE.TIMELINE_ID = FF_TRANS.TIMELINE_ID
	INNER JOIN CUSTOMER ON CUSTOMER.CUST_ID = SALES_ORDER.CUST_ID
	INNER JOIN DEBTOR ON DEBTOR.[DATAFLEX RECNUM ONE] = CUSTOMER.DEBTOR_RECNUM
WHERE ISNULL(FF_TRANS.SO_ID, '0') > 0 AND (FF_TRANS.TIME_START >= @FromShipDate AND FF_TRANS.TIME_START <= @ToShipDate))

UNION

(SELECT SALES_ORDER.BILL_TO_ID as CustomerId, SALES_ORDER.CUST_ID as ParentId, DEBTOR.NAMES as Parent, '' as CostCentre,
SALES_ORDER.SO_ID as OrderNum, SALES_ORDER.CUST_SO_ID as OrderWareNum, '' as CustRef, PACKAGE.PICK_ID as PickSlip,
'' as DespNote, PACKAGE.SHIP_DATE as DespDate, 'Shipping' as FeeType, 
'' as Item, SHIPPING_MODE.SHIP_MODE_DESC as Description, '1' as Qty,
'' as UOI	, '' as UnitOfIssDesc, SO_CHARGE.AMOUNT as UnitPrice, 
SO_CHARGE.AMOUNT as SellExcl, (SO_CHARGE.AMOUNT + ISNULL(SO_CHARGE.SALES_TAX,0)) as SellIncl, '' as DeliverTo, 
'' as AttentionTo, 
PACKAGE.ACTUAL_WEIGHT as Weight, '1' as Packages
FROM SO_CHARGE
	INNER JOIN SALES_ORDER ON SALES_ORDER.SO_ID = SO_CHARGE.SO_ID
	INNER JOIN CUSTOMER ON CUSTOMER.CUST_ID = SALES_ORDER.CUST_ID
	INNER JOIN DEBTOR ON DEBTOR.[DATAFLEX RECNUM ONE] = CUSTOMER.DEBTOR_RECNUM
	LEFT JOIN PACKAGE ON PACKAGE.PACKAGE_ID = SO_CHARGE.PackageID
	LEFT JOIN SHIPPING_MODE ON SHIPPING_MODE.SHIP_MODE_ID = PACKAGE.SHIP_MODE_ID
WHERE ISNULL(SO_CHARGE.SO_ID, '0') > 0 AND (SO_CHARGE.MODIFIED_DATE >= @FromShipDate AND SO_CHARGE.MODIFIED_DATE <= @ToShipDate))
ORDER BY SALES_ORDER.SO_ID

